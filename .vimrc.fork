let zITERM_PROFILE = system('cat ~/.iterm_profile')

if zITERM_PROFILE == ''
    let zITERM_PROFILE = "Default\n"
endif
if zITERM_PROFILE == "Default\n"
    " [ir_black]
    set background=dark
    colorscheme ir_black-256
    autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  ctermbg=238
    autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=235
    let g:indent_guides_auto_colors = 0
    let g:airline_theme='jellybeans'
elseif zITERM_PROFILE == "solar light\n"
    " [solarized light]
    set background=light
    autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  ctermbg=grey
    autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=lightgrey
    let g:solarized_termcolors=16
    let g:indent_guides_auto_colors = 0
    colorscheme solarized
    let g:airline_theme='solarized'
elseif zITERM_PROFILE == "solar dark\n"
    " [solarized dark]
    set background=dark
    let g:solarized_termcolors=16
    let g:indent_guides_auto_colors = 0
    colorscheme solarized
    let g:airline_theme='solarized'
endif


" enable cursor shape changes in tmux+iterm
" https://gist.github.com/andyfowler/1195581#comment-1190742
if exists('$ITERM_PROFILE')
  if exists('$TMUX')
    let &t_SI = "\<Esc>[3 q"
    let &t_EI = "\<Esc>[0 q"
  else
    let &t_SI = "\<Esc>]50;CursorShape=1\x7"
    let &t_EI = "\<Esc>]50;CursorShape=0\x7"
  endif
end

let NERDTreeQuitOnOpen = 0
let g:nerdtree_tabs_open_on_gui_startup=1
let g:nerdtree_tabs_open_on_new_tab=1
let NERDTreeMouseMode=1
let NERDTreeIgnore = ['\.ropeproject$', '\.git$', '\.pyc$', '\.DS_Store$', '\.noseids', '\.venv']
let NERDTreeShowLineNumbers=0

" let g:pymode_lint_cwindow = 0
let g:pymode_lint_checker = 'pyflakes,mccabe'

let g:airline_mode_map = {
      \ '__' : '-',
      \ 'n'  : 'N',
      \ 'i'  : 'I',
      \ 'R'  : 'R',
      \ 'c'  : 'C',
      \ 'v'  : 'v',
      \ 'V'  : 'V',
      \ '' : '≚',
      \ 's'  : 'S',
      \ 'S'  : 'S',
      \ '' : 'S',
      \ }
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif
let g:airline_symbols.spell = 'Ꞩ'
let g:airline_symbols.paste = 'Þ'
let g:airline_symbols.linenr = ''
let g:airline_symbols.maxlinenr = ''
let g:airline_section_x = ''
let g:airline_section_y = ''

" autocmd FileType python :setlocal foldmethod=indent
autocmd FileType python :setlocal nospell
autocmd FileType python :setlocal nowrap
autocmd FileType yaml :setlocal foldmethod=indent

set noshowmode
set mouse-=a
" set diffopt+=iwhite
set diffopt-=iwhite
set diffopt+=vertical
set diffexpr=""

au BufEnter * call MyLastWindow()
function! MyLastWindow()
  " if the window is quickfix go on
  if &buftype=="quickfix"
    " if this window is last on screen quit without warning
    if winbufnr(2) == -1
      quit!
    endif
  endif
endfunction

nnoremap <C-j> 10j
nnoremap <C-k> 10k
nnoremap <C-h> 10h
nnoremap <C-l> 10l
inoremap jj <Esc>
vnoremap gg :diffget //2<CR>
vnoremap gG :diffget //3<CR>
vnoremap gp :diffput<CR>
set pastetoggle=<F10>
nnoremap <leader><C-R> :so $MYVIMRC<CR>

nnoremap ]c :call PythonDec("class", 1)<CR>
nnoremap [c :call PythonDec("class", -1)<CR>
nnoremap ]m :call PythonDec("function", 1)<CR>
nnoremap [m :call PythonDec("function", -1)<CR>
